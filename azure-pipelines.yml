# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

  - task: TerraformCLI@1
    displayName: 'Install Terraform'
    inputs:
      terraformVersion: '$(terraform)'

  - script: |
      echo "AZUREAD_VERSION: \"$(AZUREAD)\""
      # echo "AZURERM_VERSION: \"$(AZURERM)\""
      echo "RANDOM_VERSION: \"$(RANDOM)\""
      # echo "TIME_VERSION: \"$(TIME)\""
    displayName: "Debug Provider Versions" 

  - script: |
      sed "s/\${AZURERM}/$(AZURERM)/; s/\${RANDOM}/$(RANDOM)/" $(System.DefaultWorkingDirectory)/01a-main.tf.tpl > main.tf
    displayName: 'Generate Terraform Configuration'
  - task: TerraformCLI@1
    inputs:
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/TerraformAKSDev/03-TF-Create-AKS-Cluster'
      backendType: 'azurerm'
      allowTelemetryCollection: true
    

  - task: TerraformCLI@1
    inputs:
      command: 'plan'
      workingDirectory: '$(System.DefaultWorkingDirectory)/TerraformAKSDev/03-TF-Create-AKS-Cluster'
      allowTelemetryCollection: true
    
